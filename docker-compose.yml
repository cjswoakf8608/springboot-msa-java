version: "3.0"
services:
  mongo_db:
    container_name: mongo_db
    image: mongo:5.0.2
    restart: no
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=dev00
#      - MONGO_INITDB_DATABASE=spring
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db
    networks:
      - api_network

  redis:
    image: redis:6.2.6
    container_name: redis
    ports:
      - 6380:6380
    volumes:
      - redis_data:/data
    networks:
      - core_network

  maria_db:
    container_name: maria_db
    image: mariadb
    volumes:
      - ~/docker/mariadb/etc/mysql/conf.d:/etc/mysql/conf.d:ro
      - ~/docker/mariadb/var/lib/mysql:/var/lib/mysql
      - ~/docker/mariadb/var/log/maria:/var/log/maria
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - MYSQL_ROOT_PASSWORD=dev00
    command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
    ports:
      - 3307:3306
    networks:
      - core_network

  kafka:
    image: docker.io/bitnami/kafka:3.7
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_KRAFT_CLUSTER_ID=fc4493b7-3c8a-40cd-be05-573da01a9ddf
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      # Single node
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
    volumes:
      - kafka_data:/bitnami/kafka

  application_app_api:
    build:
      context: ./apis/apps
      dockerfile: Dockerfile
    restart: no
    depends_on:
      - mongo_db
    ports:
      - 8000:8000
    container_name: app_api
    networks:
      - api_network

  application_payment_api:
    build:
      context: ./apis/payments
      dockerfile: Dockerfile
    restart: no
    depends_on:
      - mongo_db
    ports:
      - 8002:8002
    container_name: payment_api
    networks:
      - api_network

  application_user_core:
    build:
      context: ./cores/core-users
      dockerfile: Dockerfile
    restart: no
    depends_on:
      - maria_db
    ports:
      - 3001:3001
    container_name: user_core
    networks:
      - core_network

  application_product_core:
    build:
      context: ./cores/core-products
      dockerfile: Dockerfile
    restart: no
    depends_on:
      - maria_db
    ports:
      - 3002:3002
    container_name: product_core
    networks:
      - core_network

  application_worker_core:
    build:
      context: ./cores/workers
      dockerfile: Dockerfile
    restart: no
    depends_on:
      - maria_db
      - redis
    ports:
      - 4000:4000
    container_name: worker_core
    networks:
      - core_network

volumes:
  mongo_data:
    driver: local
  kafka_data:
    driver: local
  redis_data:
    driver: local

networks:
  api_network:
  core_network:
